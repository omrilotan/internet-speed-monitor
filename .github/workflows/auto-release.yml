name: Manual Release Creator

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
      prerelease:
        description: 'Is this a prerelease?'
        required: false
        default: false
        type: boolean
      release_notes:
        description: 'Release notes (optional)'
        required: false
        default: ''
        type: string

permissions:
  contents: write
  pull-requests: read

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Bump version
      id: version
      run: |
        NEW_VERSION=$(npm version ${{ github.event.inputs.version_type }} --no-git-tag-version)
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "version_number=${NEW_VERSION#v}" >> $GITHUB_OUTPUT
    
    - name: Update changelog
      run: |
        # Create a basic changelog entry if none provided
        RELEASE_NOTES="${{ github.event.inputs.release_notes }}"
        if [ -z "$RELEASE_NOTES" ]; then
          RELEASE_NOTES="- Version bump to ${{ steps.version.outputs.version_number }}"
        fi
        
        # Prepare new changelog entry
        echo "## [${{ steps.version.outputs.version_number }}] - $(date +%Y-%m-%d)" > CHANGELOG_NEW.md
        echo "" >> CHANGELOG_NEW.md
        echo "### Changes" >> CHANGELOG_NEW.md
        echo "$RELEASE_NOTES" >> CHANGELOG_NEW.md
        echo "" >> CHANGELOG_NEW.md
        
        # Append existing changelog if it exists
        if [ -f CHANGELOG.md ]; then
          tail -n +2 CHANGELOG.md >> CHANGELOG_NEW.md
        fi
        mv CHANGELOG_NEW.md CHANGELOG.md
    
    - name: Commit version bump and changelog
      run: |
        git add package.json CHANGELOG.md
        git commit -m "chore: release version ${{ steps.version.outputs.new_version }}

        - Bump version to ${{ steps.version.outputs.new_version }}
        - Update CHANGELOG.md with release notes"
        git push
    
    - name: Create and push tag
      run: |
        git tag -a ${{ steps.version.outputs.new_version }} -m "Release ${{ steps.version.outputs.new_version }}"
        git push origin ${{ steps.version.outputs.new_version }}
    
    - name: Wait for tag-based workflow
      run: |
        echo "Tag ${{ steps.version.outputs.new_version }} created successfully!"
        echo "The release workflow will now build and create the GitHub release automatically."
        echo "Check the Actions tab to monitor the build progress."
