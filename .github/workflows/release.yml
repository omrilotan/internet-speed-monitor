name: Build and Release

on:
  push:
    tags:
      - 'v*' # Triggers on version tags like v1.0.0, v1.2.3, etc.
  workflow_dispatch: # Allows manual triggering

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build Electron app
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          npm run build:linux
        elif [ "$RUNNER_OS" == "Windows" ]; then
          npm run build:win
        elif [ "$RUNNER_OS" == "macOS" ]; then
          npm run build:mac
        fi
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CSC_IDENTITY_AUTO_DISCOVERY: false  # Disable code signing for now
    
    - name: Upload artifacts (macOS)
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-builds
        path: |
          dist/*.dmg
          dist/*.zip
          dist/*.blockmap
          dist/latest-mac.yml
    
    - name: Upload artifacts (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-builds
        path: |
          dist/*.exe
          dist/*.nsis.7z
          dist/*.blockmap
          dist/latest.yml
    
    - name: Upload artifacts (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: linux-builds
        path: |
          dist/*.AppImage
          dist/*.deb
          dist/*.blockmap
          dist/latest-linux.yml

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Display structure of downloaded files
      run: ls -la
      
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          macos-builds/*
          windows-builds/*
          linux-builds/*
        name: Release ${{ github.ref_name }}
        body: |
          ## Internet Speed Monitor ${{ github.ref_name }}
          
          ### ðŸš€ What's New
          
          Check out the [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.
          
          ### ðŸ“¥ Downloads
          
          Choose the appropriate download for your operating system:
          
          #### macOS
          - **Internet Speed Monitor-X.X.X.dmg** - Standard installer for macOS (Intel & Apple Silicon)
          - **Internet Speed Monitor-X.X.X-mac.zip** - Portable application archive
          
          #### Windows
          - **Internet Speed Monitor Setup X.X.X.exe** - Windows installer (recommended)
          - **Internet Speed Monitor X.X.X.exe** - Portable executable
          
          #### Linux
          - **Internet Speed Monitor-X.X.X.AppImage** - Universal Linux application (recommended)
          - **internet-speed-monitor_X.X.X_amd64.deb** - Debian/Ubuntu package
          
          ### ðŸ”§ Installation
          
          1. **macOS**: Download the .dmg file and drag the app to Applications
          2. **Windows**: Download and run the .exe installer
          3. **Linux**: Download the .AppImage, make it executable (`chmod +x`), and run
          
          ### ðŸ“‹ System Requirements
          
          - **macOS**: 10.14 (Mojave) or later
          - **Windows**: Windows 10 or later
          - **Linux**: Ubuntu 16.04+, Fedora 24+, Debian 9+ or equivalent
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
